// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                 String  @id @default(cuid())
    userId             String  @map("user_id")
    type               String
    provider           String
    providerAccountId  String  @map("provider_account_id")
    refresh_token      String?
    access_token       String?
    expires_at         Int?
    created_at         Int?
    token_type         String?
    scope              String?
    id_token           String?
    session_state      String?
    oauth_token_secret String?
    oauth_token        String?
    secret_valid_until Int?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique @map("session_token")
    userId       String   @map("user_id")
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    reviews       Review[]
    comments      Comment[]
}

model Review {
    id        String   @id @default(cuid())
    comment   String?
    companyId String   @map("company_id")
    jobTitle  String?
    rating    Int
    createdAt DateTime @default(now())

    userId  String    @map("user_id")
    user    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    Comment Comment[]
}

model Comment {
    id        String   @id @default(cuid())
    comment   String?
    createdAt DateTime @default(now())

    reviewId String @map("review_id")
    review   Review @relation(fields: [reviewId], references: [id], onDelete: Cascade)
    userId   String @map("user_id")
    user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
